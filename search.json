[{"path":"https://dereckmezquita.github.io/R-Logger/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to Logger","title":"Contributing to Logger","text":"Thank interest contributing Logger!","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to Logger","text":"Please read adhere Code Conduct.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/CONTRIBUTING.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to Contribute","title":"Contributing to Logger","text":"Use clear, descriptive title. Provide detailed steps reproduce implement. Fill PR template. Include tests documentation. Improve documentation submitting PRs clarifications additions.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/CONTRIBUTING.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development Guidelines","title":"Contributing to Logger","text":"Use 4 spaces indentation. Use box imports. Prefer base R functions avoid unnecessary dependencies. aim minimise external dependencies, including tidyverse packages. Write clear, efficient, maintainable code. Example:","code":"box::use(     Logger[Logger, LogLevel] )  log_message <- function(message, level = LogLevel$INFO) {     logger <- Logger$new()     logger$log(level, message) }"},{"path":"https://dereckmezquita.github.io/R-Logger/CONTRIBUTING.html","id":"commit-messages","dir":"","previous_headings":"","what":"Commit Messages","title":"Contributing to Logger","text":"Use present tense (“Add feature”, “Added feature”) concise descriptive","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/CONTRIBUTING.html","id":"need-help","dir":"","previous_headings":"","what":"Need Help?","title":"Contributing to Logger","text":"Check issues labeled good first issue help wanted. Thank contributing Logger!","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dereck Mezquita. Author, maintainer.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mezquita D (2024). Logger: Flexible Customisable Logging System R. R package version 0.0.21, https://github.com/dereckmezquita/R-Logger.","code":"@Manual{,   title = {Logger: Flexible and Customisable Logging System for R},   author = {Dereck Mezquita},   year = {2024},   note = {R package version 0.0.21},   url = {https://github.com/dereckmezquita/R-Logger}, }"},{"path":"https://dereckmezquita.github.io/R-Logger/index.html","id":"logger-","dir":"","previous_headings":"","what":"Flexible and Customisable Logging System for R","title":"Flexible and Customisable Logging System for R","text":"Logger flexible powerful logging system R applications. provides Logger class creating customisable loggers, well helper functions debugging error reporting.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Flexible and Customisable Logging System for R","text":"can install Logger GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"derecksprojects/R-Logger\")"},{"path":"https://dereckmezquita.github.io/R-Logger/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic Usage","title":"Flexible and Customisable Logging System for R","text":"’s quick example use Logger:","code":"box::use(Logger[Logger, LogLevel])  # Create a basic logger log <- Logger$new()  # Log some messages log$info(\"This is an informational message\") #> 2024-08-03T11:25:34.062Z INFO    This is an informational message log$warn(\"This is a warning\") #> 2024-08-03T11:25:34.070Z WARNING This is a warning log$error(\"This is an error\") #> 2024-08-03T11:25:34.084Z ERROR   This is an error"},{"path":[]},{"path":"https://dereckmezquita.github.io/R-Logger/index.html","id":"customisable-logging","dir":"","previous_headings":"Features","what":"Customisable Logging","title":"Flexible and Customisable Logging System for R","text":"can customise logger specifying minimum log level, output file, custom print function: Logs written specified file JSON objects:","code":"log_file <- tempfile(\"app_log\")  custom_log <- Logger$new(     level = LogLevel$WARNING,     file_path = log_file,     print_fn = message )  custom_log$info(\"This won't be logged\") custom_log$warn(\"This will be logged to console and file\") #> 2024-08-03T11:25:34.223Z WARNING This will be logged to console and file custom_log$error(\"This is an error message\") #> 2024-08-03T11:25:34.234Z ERROR   This is an error message cat(readLines(log_file), sep = \"\\n\") #> {\"datetime\":\"2024-08-03T11:25:34.223Z\",\"level\":\"WARNING\",\"msg\":\"This will be logged to console and file\"}  #> {\"datetime\":\"2024-08-03T11:25:34.234Z\",\"level\":\"ERROR\",\"msg\":\"This is an error message\"}"},{"path":"https://dereckmezquita.github.io/R-Logger/index.html","id":"helper-functions","dir":"","previous_headings":"Features","what":"Helper Functions","title":"Flexible and Customisable Logging System for R","text":"Logger includes helper functions like valueCoordinates tableToString provide detailed context log messages:","code":"box::use(Logger[valueCoordinates, tableToString])  # Create a sample dataset with some issues df <- data.frame(     a = c(1, NA, 3, 4, 5),     b = c(2, 4, NA, 8, 10),     c = c(3, 6, 9, NA, 15) )  # Find coordinates of NA values na_coords <- valueCoordinates(df)  if (nrow(na_coords) > 0) {     log$warn(         \"NA values found in the dataset\",         data = list(             na_locations = na_coords,             dataset_preview = tableToString(df)         )     ) } #> 2024-08-03T11:25:34.243Z WARNING NA values found in the dataset #> Data: #> { #>   \"na_locations\": [ #>     { #>       \"column\": 1, #>       \"row\": 2 #>     }, #>     { #>       \"column\": 2, #>       \"row\": 3 #>     }, #>     { #>       \"column\": 3, #>       \"row\": 4 #>     } #>   ], #>   \"dataset_preview\": \"   a  b  c\\n1  1  2  3\\n2 NA  4  6\\n3  3 NA  9\\n4  4  8 NA\\n5  5 10 15\" #> }"},{"path":"https://dereckmezquita.github.io/R-Logger/index.html","id":"error-logging-with-context","dir":"","previous_headings":"Features","what":"Error Logging with Context","title":"Flexible and Customisable Logging System for R","text":"Logger makes easy log errors context:","code":"process_data <- function(df) {     tryCatch({         result <- df$a / df$b         if (any(is.infinite(result))) {             inf_coords <- valueCoordinates(data.frame(result), Inf)             log$error(                 \"Division by zero occurred\",                 data = list(                     infinite_values = inf_coords,                     dataset_preview = tableToString(df)                 )             )             stop(\"Division by zero error\")         }         return(result)     }, error = function(e) {         log$error(             paste(\"An error occurred while processing data:\", e$message),             data = list(dataset_preview = tableToString(df)),             error = e         )         stop(e)     }) }  # Test the function with problematic data df <- data.frame(a = c(1, 2, 3), b = c(0, 2, 0)) process_data(df) #> 2024-08-03T11:25:34.252Z ERROR   Division by zero occurred #> Data: #> { #>   \"infinite_values\": [ #>     { #>       \"column\": 1, #>       \"row\": 1 #>     }, #>     { #>       \"column\": 1, #>       \"row\": 3 #>     } #>   ], #>   \"dataset_preview\": \"  a b\\n1 1 0\\n2 2 2\\n3 3 0\" #> }  #> 2024-08-03T11:25:34.271Z ERROR   An error occurred while processing data: Division by zero error #> Data: #> { #>   \"dataset_preview\": \"  a b\\n1 1 0\\n2 2 2\\n3 3 0\" #> } #> Error: #> { #>   \"name\": \"simpleError\", #>   \"message\": \"Division by zero error\", #>   \"call\": \"doTryCatch(return(expr), name, parentenv, handler)\" #> } #> Error in doTryCatch(return(expr), name, parentenv, handler): Division by zero error"},{"path":"https://dereckmezquita.github.io/R-Logger/index.html","id":"parallel-processing-support","dir":"","previous_headings":"Features","what":"Parallel Processing Support","title":"Flexible and Customisable Logging System for R","text":"Logger provides support logging parallel environments:","code":"box::use(future) box::use(future.apply[future_lapply]) box::use(Logger[messageParallel])  log <- Logger$new(print_fn = messageParallel)  future::plan(future::multisession, workers = 2)  result <- future_lapply(1:5, function(i) {     messageParallel(sprintf(\"Processing item %d\", i))     if (i == 3) {         log$warn(sprintf(\"Warning for item %d\", i))     }     return(i * 2) })  future::plan(future::sequential) #> Processing item 1 #> Processing item 2 #> Processing item 3 #> 2024-08-03T11:18:03.091Z WARNING Warning for item 3 #> Processing item 4 #> Processing item 5"},{"path":"https://dereckmezquita.github.io/R-Logger/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Flexible and Customisable Logging System for R","text":"Contributions Logger welcome! Please refer CONTRIBUTING.md file guidelines.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Flexible and Customisable Logging System for R","text":"Logger released MIT License. See LICENSE file details.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/LogLevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Levels — LogLevel","title":"Log Levels — LogLevel","text":"Defines available log levels Logger class.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/LogLevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Levels — LogLevel","text":"","code":"LogLevel"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/LogLevel.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Log Levels — LogLevel","text":"object class list length 3.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Logger — Logger","title":"Logger — Logger","text":"R6 class flexible logging customisable output message formatting.","code":""},{"path":[]},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Logger — Logger","text":"Logger$new() Logger$set_level() Logger$error() Logger$warn() Logger$info() Logger$clone()","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Logger — Logger","text":"Create new Logger object.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger — Logger","text":"","code":"Logger$new(   level = LogLevel$INFO,   file_path = NULL,   print_fn = function(x) cat(x, \"\\n\"),   format_fn = function(level, msg) msg )"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger — Logger","text":"level minimum log level output. Default LogLevel$INFO. file_path Character; path file save log entries . Default NULL. print_fn Function; custom print function use console output. accept single character string input. Default uses cat newline. format_fn Function; custom format function modify log message. accept level msg inputs return formatted string.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Logger — Logger","text":"new `Logger` object.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logger — Logger","text":"","code":"logger <- Logger$new(   level = LogLevel$WARNING,   file_path = \"log.txt\",   print_fn = function(x) message(paste0(\"Custom: \", x)),   format_fn = function(level, msg) paste0(\"Hello prefix: \", msg) )"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"method-set-level-","dir":"Reference","previous_headings":"","what":"Method set_level()","title":"Logger — Logger","text":"Set minimum log level.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger — Logger","text":"","code":"Logger$set_level(level)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger — Logger","text":"level new minimum log level set.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Logger — Logger","text":"","code":"logger <- Logger$new() logger$set_level(LogLevel$WARNING)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"method-error-","dir":"Reference","previous_headings":"","what":"Method error()","title":"Logger — Logger","text":"Log error message.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger — Logger","text":"","code":"Logger$error(msg, data = NULL, error = NULL)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger — Logger","text":"msg Character; error message log. data Optional; additional data include log entry. error Optional; error object include log entry.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Logger — Logger","text":"","code":"logger <- Logger$new() logger$error(\"An error occurred\", data = list(x = 1), error = simpleError(\"Oops!\"))"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"method-warn-","dir":"Reference","previous_headings":"","what":"Method warn()","title":"Logger — Logger","text":"Log warning message.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger — Logger","text":"","code":"Logger$warn(msg, data = NULL)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger — Logger","text":"msg Character; warning message log. data Optional; additional data include log entry.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Logger — Logger","text":"","code":"logger <- Logger$new() logger$warn(\"This is a warning\", data = list(reason = \"example\"))"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"method-info-","dir":"Reference","previous_headings":"","what":"Method info()","title":"Logger — Logger","text":"Log info message.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger — Logger","text":"","code":"Logger$info(msg, data = NULL)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger — Logger","text":"msg Character; info message log. data Optional; additional data include log entry.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Logger — Logger","text":"","code":"logger <- Logger$new() logger$info(\"Operation completed successfully\", data = list(duration = 5.2))"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Logger — Logger","text":"objects class cloneable method.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger — Logger","text":"","code":"Logger$clone(deep = FALSE)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger — Logger","text":"deep Whether make deep clone.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logger — Logger","text":"","code":"# Create a basic logger logger <- Logger$new() logger$info(\"This is an info message\") #> 2024-08-18T14:10:25.735Z INFO    This is an info message  logger$warn(\"This is a warning\") #> 2024-08-18T14:10:25.740Z WARNING This is a warning  logger$error(\"This is an error\") #> 2024-08-18T14:10:25.749Z ERROR   This is an error   # Create a logger with custom settings and message formatting custom_logger <- Logger$new(   level = LogLevel$WARNING,   file_path = tempfile(\"log_\"),   print_fn = function(x) message(paste0(\"Custom: \", x)),   format_fn = function(level, msg) paste0(\"Hello prefix: \", msg) ) custom_logger$info(\"This won't be logged\") custom_logger$warn(\"This will be logged with a custom prefix\") #> Custom: 2024-08-18T14:10:25.754Z WARNING Hello prefix: This will be logged with a custom prefix  # Change log level custom_logger$set_level(LogLevel$INFO) custom_logger$info(\"Now this will be logged with a custom prefix\") #> Custom: 2024-08-18T14:10:25.756Z INFO    Hello prefix: Now this will be logged with a custom prefix  ## ------------------------------------------------ ## Method `Logger$new` ## ------------------------------------------------  logger <- Logger$new(   level = LogLevel$WARNING,   file_path = \"log.txt\",   print_fn = function(x) message(paste0(\"Custom: \", x)),   format_fn = function(level, msg) paste0(\"Hello prefix: \", msg) )  ## ------------------------------------------------ ## Method `Logger$set_level` ## ------------------------------------------------  logger <- Logger$new() logger$set_level(LogLevel$WARNING)  ## ------------------------------------------------ ## Method `Logger$error` ## ------------------------------------------------  logger <- Logger$new() logger$error(\"An error occurred\", data = list(x = 1), error = simpleError(\"Oops!\")) #> 2024-08-18T14:10:25.768Z ERROR   An error occurred #> Data: #> { #>   \"x\": 1 #> } #> Error: #> { #>   \"name\": \"simpleError\", #>   \"message\": \"Oops!\", #>   \"call\": \"NULL\" #> }   ## ------------------------------------------------ ## Method `Logger$warn` ## ------------------------------------------------  logger <- Logger$new() logger$warn(\"This is a warning\", data = list(reason = \"example\")) #> 2024-08-18T14:10:25.770Z WARNING This is a warning #> Data: #> { #>   \"reason\": \"example\" #> }   ## ------------------------------------------------ ## Method `Logger$info` ## ------------------------------------------------  logger <- Logger$new() logger$info(\"Operation completed successfully\", data = list(duration = 5.2)) #> 2024-08-18T14:10:25.772Z INFO    Operation completed successfully #> Data: #> { #>   \"duration\": 5.2 #> }"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/collapse.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate a vector of strings — collapse","title":"Concatenate a vector of strings — collapse","text":"Helper function pretty printing vectors. Avoids repetitive paste0 code. one element add separator end.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/collapse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate a vector of strings — collapse","text":"","code":"collapse(vector, collapse = \" \")"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/collapse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate a vector of strings — collapse","text":"vector Character vector. collapse separator.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/collapse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate a vector of strings — collapse","text":"character","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/collapse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate a vector of strings — collapse","text":"","code":"collapse(letters, \", \") #> [1] \"a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z\" collapse(letters[1], \", \") #> [1] \"a\""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/messageParallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Print from parallel forked processes — messageParallel","title":"Print from parallel forked processes — messageParallel","text":"Uses `sprintf` `C` function echo messages back R console parallel computation `future` `future.apply`.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/messageParallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print from parallel forked processes — messageParallel","text":"","code":"messageParallel(...)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/messageParallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print from parallel forked processes — messageParallel","text":"... Character vector messages print.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/messageParallel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print from parallel forked processes — messageParallel","text":"Beware function may consume large amounts resources.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/messageParallel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print from parallel forked processes — messageParallel","text":"","code":"messageParallel(\"Send this message back up.\")"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/tableToString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a data.frame printout to a string — tableToString","title":"Convert a data.frame printout to a string — tableToString","text":"function captures output printing object data.frame returns single string. particularly useful including tabular data error messages log entries strings.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/tableToString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a data.frame printout to a string — tableToString","text":"","code":"tableToString(obj)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/tableToString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a data.frame printout to a string — tableToString","text":"obj R object printed captured.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/tableToString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a data.frame printout to a string — tableToString","text":"Character string","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/tableToString.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a data.frame printout to a string — tableToString","text":"function performs following steps: 1. Converts input object data frame using `.data.frame()`. 2. Prints resulting data.frame. 3. Captures print output using `capture.output()`. 4. Collapses captured output single string newline characters. function particularly useful need include contents table data frame single string, throwing error message creating log entry. allows easily combine textual information tabular data format can printed cohesive message.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/tableToString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a data.frame printout to a string — tableToString","text":"","code":"# Create a sample data frame df <- data.frame(a = 1:3, b = letters[1:3])  # Use tableToString to get the output as a string output <- tableToString(df) cat(output) #>   a b #> 1 1 a #> 2 2 b #> 3 3 c  # Example of using tableToString in error handling tryCatch({     # Some operation that might fail     if (sum(df$a) > 5) {         stop(             paste(\"Sum of column 'a' is too high. Current data:\",             tableToString(df))         )   } }, error = function(e) {     message(\"An error occurred: \", e$message) }) #> An error occurred: Sum of column 'a' is too high. Current data:   a b #> 1 1 a #> 2 2 b #> 3 3 c"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/valueCoordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Coordinates of Specific Values in a data.frame — valueCoordinates","title":"Find Coordinates of Specific Values in a data.frame — valueCoordinates","text":"function locates row column coordinates values data.frame satisfy given condition. particularly useful identifying positions specific problematic values large datasets.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/valueCoordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Coordinates of Specific Values in a data.frame — valueCoordinates","text":"","code":"valueCoordinates(df, value = NA, eq_fun = value_check)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/valueCoordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Coordinates of Specific Values in a data.frame — valueCoordinates","text":"df data.frame searched. value value search . Default NA. eq_fun function used check equality. take two arguments: current value data.frame `value` parameter. Default internal `eq_fun` function uses `identical()` non-NA values `.na()` NA.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/valueCoordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Coordinates of Specific Values in a data.frame — valueCoordinates","text":"data.frame two columns: column column numbers specified condition met row row numbers specified condition met returned data.frame sorted first column, row.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/valueCoordinates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Coordinates of Specific Values in a data.frame — valueCoordinates","text":"function performs following steps: 1. Creates logical matrix TRUE indicates values meeting specified condition. 2. Finds row column indices TRUE values. 3. Combines indices data.frame. 4. Sorts results column, row. custom equality function provided, function uses internal `eq_fun` checks NA values `.na()` uses `identical()` values.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/valueCoordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Coordinates of Specific Values in a data.frame — valueCoordinates","text":"","code":"# Create a sample data.frame df <- data.frame(   a = c(1, NA, 3),   b = c(NA, 2, NA),   c = c(3, 2, 1) )  # Find coordinates of NA values valueCoordinates(df) #>   column row #> 2      1   1 #> 1      2   2 #> 3      2   3  # Find coordinates of the value 2 valueCoordinates(df, 2) #>   column row #> 1      2   2 #> 2      3   2  # Find coordinates of values greater than 2 valueCoordinates(df, 2, function(x, y) x > y) #>   column row #> 2      1   1 #> 1      3   3  # Find coordinates of values within a range valueCoordinates(df, c(1, 3), function(x, y) x >= y[1] & x <= y[2]) #>   column row #> 1      1   1 #> 5      1   2 #> 3      2   2 #> 4      3   1 #> 2      3   3 #> 6      3   3"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/value_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Equality Function for valueCoordinates — value_check","title":"Default Equality Function for valueCoordinates — value_check","text":"helper function used default equality check valueCoordinates. handles NA values uses identical() non-NA comparisons.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/value_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Equality Function for valueCoordinates — value_check","text":"","code":"value_check(x, y)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/value_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Equality Function for valueCoordinates — value_check","text":"x current value data.frame y value compare (`value` parameter valueCoordinates)","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/value_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Equality Function for valueCoordinates — value_check","text":"Logical value indicating whether condition met","code":""}]
